import streamlit as st
import pandas as pd
import numpy as np
import folium
from streamlit_folium import folium_static

# 더미 데이터
np.random.seed(42)
categories = ["Korean", "Italian", "Mexican", "Japanese", "Indian"]
restaurants = pd.DataFrame({
    'Name': [f'Restaurant_{i}' for i in range(1, 101)],
    'Latitude': np.random.uniform(37.5, 37.8, size=100),
    'Longitude': np.random.uniform(126.9, 127.2, size=100),
    'Address': [f'Address_{i}' for i in range(1, 101)],
    'Review': [f'Review_{i}' for i in range(1, 101)],
})
    
st.set_page_config(page_title="음식점 추천 서비스", page_icon="🍔", layout="wide")

# 세션 상태 초기화
if "page_number" not in st.session_state:
    st.session_state.page_number = 1
if "user_name" not in st.session_state:
    st.session_state.user_name = ""

user_favorite = []
user_name = "user"

if st.session_state.page_number == 1:
    user_favorite = []

    welcome = st.empty()
    welcome.title("안녕하세요!")
    user_name_input = st.empty()
    user_name = user_name_input.text_input("성함이 어떻게 되세요?", key="user_name")
    main_text_container = st.empty()
    main_text_container.caption("Visit [GitHub](https://github.com/The-Martin-Kim/2023-Machine-Learning-Term-Project)")

    if user_name != "":
        st.session_state.page_number += 1

        user_name_input.empty()
        welcome.empty()
        main_text_container.empty()

if st.session_state.page_number == 2:
    Hello_name = st.empty()
    Hello_name.title(f"반가워요, {user_name} 님!")
    Hello_choice = st.empty()
    Hello_choice.subheader(f"{user_name} 님과 맞는 식당을 찾기 위해, 마음에 드는 곳을 골라주세요.")

    select_restaurants = restaurants.sample(10, random_state=42)  # 더미

    container1= st.empty()
    with container1.expander(f"Choice", expanded=True):
        selected_restaurant_name = st.selectbox("레스토랑을 선택하세요", select_restaurants)

        selected_restaurant = restaurants[restaurants['Name'] == selected_restaurant_name]
        st.write(f"선택한 식당: {selected_restaurant['Name'].values[0]}")
        st.write(f"리뷰: {selected_restaurant['Review'].values[0]}")
        user_favorite = [selected_restaurant]

    next_button_1 = st.button("결과 확인", key="next_button_1")
    if next_button_1 and not selected_restaurant.empty:
        st.session_state.page_number += 1

if st.session_state.page_number == 3:
    container1.expander(f"Choice")

    st.write("---")
    Answer_name = st.empty()
    Answer_name.subheader(f"{user_name} 님께서 선택하신 곳과 비슷한 식당이에요")

    container2= st.empty()
    with container2.expander(f"Recommend", expanded=True):
        for i in range(3):
            col1, col2 = st.columns(2, gap="small")
            with col1:
                st.write(f"식당: {selected_restaurant['Name'].values[0]}")
                st.write(f"주소: {selected_restaurant['Name'].values[0]}")
                st.write(f"전화번호: {selected_restaurant['Name'].values[0]}")
                st.write(f"리뷰: {selected_restaurant['Name'].values[0]}")
            with col2:
                m = folium.Map(location=selected_restaurant.iloc[i][['Latitude', 'Longitude']], zoom_start=15)
                folium.Marker(selected_restaurant.iloc[i][['Latitude', 'Longitude']], popup=f"추천 음식점\n{selected_restaurant['Address'].iloc[0]}").add_to(m)
                folium_static(m, width=350, height=150)

    next_button_2 = st.button("다시 선택", key="next_button_2")
    if next_button_2 and not selected_restaurant.empty:
        st.session_state.page_number -= 1
        Answer_name.empty()

    
